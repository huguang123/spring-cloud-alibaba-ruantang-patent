# 对外端口
server:
  port: 9000

spring:
#  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
#    default-property-inclusion: non_null
#  data:
#    redis:
#      # Redis本地服务器地址，注意要开启redis服务，即那个redis-server.exe
#      host: 127.0.0.1
#      # Redis服务器端口,默认为6379.若有改动按改动后的来
#      port: 6379
#      #Redis服务器连接密码，默认为空，若有设置按设置的来
#      password:
#      jedis:
#        pool:
#          # 连接池最大连接数，若为负数则表示没有任何限制
#          max-active: 8
#          # 连接池最大阻塞等待时间，若为负数则表示没有任何限制
#          max-wait: -1
#          # 连接池中的最大空闲连接
#          max-idle: 8
#
#  # cloud配置
#  cloud:
#    #
#    #    sentinel:
#    #      transport:
#    #        port: 8721
#    #        dashboard: 127.0.0.1:8080
#
#    gateway:
#      discovery:
#        locator:
#          enabled: true
#      routes:
#        # 路由的ID，没有固定规则但要求唯一，建议配合服务名
#        - id: SERVICE-SEARCH
#          uri: lb://service-search
#          predicates:
#            # 路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置
#            - Path=/search/**
#          filters:
#            # 前缀过滤，默认配置下，我们的请求路径是 http://localhost:9000/service-consumer-item/** 这时会路由到指定的服务
#            # 此处配置去掉 1 个路径前缀，再配置上面的 Path=/item/**，就能按照 http://localhost:9000/item/** 的方式访问了
#            - StripPrefix=1
#        - id: SERVICE-USER
#          uri: lb://service-user
#          predicates:
#            - Path=/ums/**
#          # 从二级url路径转发
#          filters:
#            - StripPrefix=1
#feign:
#  sentinel:
#    enabled: true
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#
##logging:
##  level:
##    root: info
##    com.tiny: debug
#
#secure:
#  ignored:
#    urls: #安全路径白名单
#      - /swagger-ui.html
#      - /swagger-resources/**
#      - /swagger/**
#      - /**/v2/api-docs
#      - /**/*.js
#      - /**/*.css
#      - /**/*.png
#      - /**/*.ico
#      - /webjars/springfox-swagger-ui/**
#      - /actuator/**
#      - /druid/**
#      - /ums/auth/login
#      - /ums/auth/register
#      - /ums/user/info
#      - /ums/auth/logout
#      - /minio/upload

  config:
    import: optional:nacos:${spring.application.name}.yaml
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
      username: nacos
      password: nacos
      discovery:
        namespace: ""
      config:
        namespace: ""
        group: DEFAULT_GROUP
        file-extension: yaml  # 关键配置，指定加载yaml格式
        refresh-enabled: true  # 启用配置动态刷新
  main:
    # 允许覆盖重写
    allow-bean-definition-overriding: true
  application:
    name: gateway  # 这个值决定了从Nacos加载的dataId

logging:
  level:
    com.alibaba.nacos: debug 