#version: '3'
services:
  gateway:
    container_name: gateway
    build: # 服务的 Docker 构建文件位置
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - mynetwork

  service-user:
    container_name: service-user
    build:
      context: ./service-user
      dockerfile: Dockerfile
    ports:
      - "9600:9600"
    networks:
      - mynetwork
    depends_on: # 本服务依赖的服务，控制启动先后顺序
      - gateway
#      - mysql
#      - redis
#    restart: on-failure:3

  service-prompt:
    container_name: service-prompt
    build:
      context: ./service-prompt
      dockerfile: Dockerfile
    ports:
      - "9700:9700"
    networks:
      - mynetwork
    depends_on:
      - service-user
      - gateway

  service-tenant:
    container_name: service-tenant
    build:
      context: ./service-tenant
      dockerfile: Dockerfile
    ports:
      - "9800:9800"
    networks:
      - mynetwork
    depends_on:
      - service-user
      - gateway

  service-permissions:
    container_name: service-permissions
    build:
      context: ./service-permissions
      dockerfile: Dockerfile
    ports:
      - "9500:9500"
    networks:
      - mynetwork
    depends_on:
      - service-user
      - gateway

  service-organization:
    container_name: service-organization
    build:
      context: ./service-organization
      dockerfile: Dockerfile
    ports:
      - "9400:9400"
    networks:
      - mynetwork
    depends_on:
      - service-user
      - gateway

# 前端服务，直接使用Dockerfile复制静态文件
  frontend:
    container_name: admin-frontend
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
    # 不需要暴露端口，因为通过nginx访问
    volumes:
      - ./nginx/html:/usr/share/nginx/html # 共享卷，确保nginx可以访问前端文件
    networks:
      - mynetwork
#    depends_on:
#      - gateway

#  yuoj-backend-judge-service:
#    container_name: yuoj-backend-judge-service
#    build:
#      context: ./yuoj-backend-judge-service
#      dockerfile: Dockerfile
#    ports:
#      - "8104:8104"
#    networks:
#      - mynetwork
#    depends_on:
#      - yuoj-backend-user-service
#      - yuoj-backend-question-service
#      - yuoj-backend-gateway

# 网络，不定义的话就是默认网络
networks:
  mynetwork:
