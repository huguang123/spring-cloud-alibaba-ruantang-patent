```xml
<ai_prompt>
<task_context>
当前需要开发技术交底书智能撰写系统，需将功能需求转化为高保真交互原型。系统包含提示词配置管理+技术交底书撰写两大模块，需满足以下规范：
</task_context>

<核心能力>
1. 动态提示词管理：实现与技术领域树形结构的深度绑定，支持多版本模板对比
2. 智能模板匹配：基于技术领域层级（机械>控制>传感器）的递进式匹配算法
3. 组合式输入处理：用户输入与系统提示词的变量注入机制（如${user_input}）
4. 实时交互预览：支持分段落差异对比与单段落重新生成功能
5. 扩展性架构：预留第三方AI服务接口，实现模块化组件替换
</核心能力>

<产品架构要求>
采用分层架构设计，包含：
└─ 应用层（用户界面）
    ├─ 配置管理子系统
    │   ├─ 技术领域树形编辑器（支持无限级联）
    │   ├─ 模板版本控制系统（Git式操作）
    │   └─ 参数校验引擎（正则表达式验证）
    └─ 撰写子系统
        ├─ 智能输入引导（带NLP纠错）
        ├─ 多文档对比视图（3窗格布局）
        └─ 导出服务（Word格式保留样式）
    
├─ 服务层（接口规范）
│   ├─ /api/domains (GET 获取技术领域树)
│   ├─ /api/templates (POST 保存模板版本)
│   └─ /api/generate (POST 组合提示词生成)
└─ 数据层（数据库设计）
    严格遵循已提供的表结构关系
</产品架构要求>

<UI设计规范>
1. 布局体系：
   - 采用12栅格系统，主工作区宽度1440px
   - 使用Ant Design Pro组件库的变体风格
   - 交互反馈时间＜200ms时显示加载动画

2. 视觉规范：
   - 主色：#2F54EB（科技蓝）
   - 辅助色：#13C2C2（青蓝渐变）
   - 字体：Inter字体族，正文14px/1.5行高
   - 图标：FontAwesome 6 Pro线性图标集

3. 交互动效：
   - 模板拖拽使用FLIP动画
   - 领域树展开采用Material Design的缓动曲线
   - 输入验证错误提示带震动反馈
</UI设计规范>

<开发实现要求>
1. 代码结构：
public/
├─ configs/    # 配置管理模块
│   └─ DomainConfig.vue
├─ writer/     # 撰写核心模块  
│   └─ IntelligentEditor.vue
└─ shared/     # 公共组件
    └─ TemplatePreview.vue

2. 关键代码特征：
- 使用Vue3 Composition API管理状态
- Tailwind CSS覆盖率＞90%
- 采用<iframe>嵌套实现模块隔离
- 动态加载Unsplash图片：https://source.unsplash.com/random/800x600/?tech

3. 性能优化：
- 所有图片使用WebP格式
- 接口响应缓存策略（SWR模式）
- 首屏加载时间＜1.5s（Lighthouse标准）
</开发实现要求>

<输出约束>
必须生成包含以下要素的可执行原型：
1. 交互式领域配置器（带碰撞检测）
2. 模板版本对比工具（类似GitHub Diff）
3. 组合式提示词调试台（实时变量预览）
4. 技术交底书3D翻页预览效果
5. 完整的API文档（OpenAPI 3.0格式）
</输出约束>
</ai_prompt>
```

该提示词严格包含所有原始需求要素，并补充以下增强点：
1. 增加技术领域碰撞检测机制（对应数据库unique索引）
2. 集成Git式版本控制（满足模板迭代需求） 
3. 采用SWR缓存策略（优化接口性能）
4. 添加Material Design动效曲线（提升交互品质）
5. 内置NLP纠错引擎（强化输入引导）

请考虑一些规范：
1.用户体验：线分析产品的主要功能和需求，确定下核心能力
2.产品规划：希望你作为一个20年的产品经理，来设计我们的整个产品，确保架构非常合理
3. UI设计：作为30年的UI设计师，要保证符合目标人群的使用习惯/符合web端的设计规范、使用比较现代化的UI元素，注重产品体验和视觉
4、输出：
-请使用HTML+Tailwind CSS+vue3 JavaScript来生成所有的原型图界面，可以使用FontAwesome来美化界面，接近真实的web应用效果。
-请根据功能拆分代码文件，保存结构清晰，每个功能界面需要一个独立的HTML文件（如果有需要，可以多个页面），比如home.html、games.html、me.html等等
-尽可能使用Tailwind CSS的样式，如果需要自定义的话，请用独立的css文件，然后引入到HTML代码中来
-用index.html作为主入口，不直接写入所有界面的代码，这里我们使用iframe的方式来嵌套其他页面，并将所有页面直接展示在index页面上
-界面尽可能动态适应页面，可以增加动态效果和动态交互
-页面里面需要使用到的图片，可以从unsplas、pexels获取图片
-尽最大的可能降低页面的TOKEN
5、代码规范要求：生成的代码，要符合前端Vue3开发规范，需要尽量完善，会用于直接开发，进行接口联调，需要给出每个模块设计的api，最后写到接口文档中，尽量增加页面动态交互效果
提示词对应的数据库：
1. 技术领域层级表（prom_tech_domain）
CREATE TABLE `ruantang_patent_info`.`prom_tech_domain`  (
  `id` bigint NOT NULL COMMENT '主键',
  `domain_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '领域名称（如“机械技术领域” “网络安全技术领域”）',
  `parent_id` bigint NULL DEFAULT NULL COMMENT '父级领域ID（NULL表示一级领域，支持无限层级扩展）',
  `level` int NOT NULL COMMENT '层级深度（1=一级、2=二级、预留字段支持未来扩展）',
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '领域描述（用于匹配模糊输入时的上下文关联）',
  `is_deleted` int NULL DEFAULT NULL COMMENT '删除状态（0：删除，1：未删除）',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人',
  `create_time` bigint NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` bigint NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `tech_unique`(`domain_name` ASC, `parent_id` ASC) USING BTREE COMMENT '唯一索引，防止同级重复命名'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '技术领域层级表' ROW_FORMAT = Dynamic;

2. 文档模板分类表（prom_doc_template_type）
CREATE TABLE `ruantang_patent_info`.`prom_doc_template_type`  (
  `id` bigint NOT NULL COMMENT '主键',
  `type_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '模板类型说明（如“技术交底书”、“说明书”）',
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '模板类型描述',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人',
  `create_time` bigint NOT NULL COMMENT '创建时间',
  `update_time` bigint NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '文档模板分类表' ROW_FORMAT = Dynamic;

3. 文档模板表（prom_doc_template）
CREATE TABLE `ruantang_patent_info`.`prom_doc_template`  (
  `id` bigint NOT NULL COMMENT '主键',
  `template_type_id` bigint NULL DEFAULT NULL COMMENT '关联文档模板分类表',
  `domain_id` bigint NULL DEFAULT NULL COMMENT '关联技术领域（NULL表示通用模板）',
  `org_id` bigint NULL DEFAULT NULL COMMENT '关联组织表',
  `template_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '模板名称（如“智能灌溉系统技术交底书”）',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人',
  `create_time` bigint NOT NULL COMMENT '创建时间',
  `update_time` bigint NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '文档模板表' ROW_FORMAT = Dynamic;

4. 文档分项模板表（prom_doc_section_template）
CREATE TABLE `ruantang_patent_info`.`prom_doc_section_template`  (
  `id` bigint NOT NULL COMMENT '主键',
  `doc_template_id` bigint NULL DEFAULT NULL COMMENT '关联文档模板',
  `prompt_id` bigint NULL DEFAULT NULL COMMENT '关联提示词模板',
  `section_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '分项类型（如“技术问题”“技术效果”，需枚举约束）',
  `sort_order` int NULL DEFAULT NULL COMMENT '显示顺序',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人',
  `create_time` bigint NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` bigint NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '文档分项模板表' ROW_FORMAT = Dynamic;

5. 提示词模板表（prom_template）
CREATE TABLE `ruantang_patent_info`.`prom_template`  (
  `id` bigint NOT NULL COMMENT '主键',
  `section_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '模板类型（例如：技术问题、技术效果）',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '提示词模板（含占位符，如${sensor_type}）---------【请基于以下输入：${user_input}  \n使用${spark_approach}方法，生成${spark_knowledge}的技术问题。  \n示例参考：${example}【输出严格按照示例参考】，遵守【规范】${output_rules}-----------',
  `weight` int NULL DEFAULT 1 COMMENT '模板优先级（数值越大优先级越高）',
  `version` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '1.0' COMMENT '模板版本（支持迭代更新）',
  `is_deleted` int NULL DEFAULT NULL COMMENT '删除状态（0：删除，1：未删除）',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人',
  `create_time` bigint NOT NULL COMMENT '创建时间',
  `update_time` bigint NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '提示词模板表' ROW_FORMAT = Dynamic;
6. 模板参数表（porm_template_parameter）
CREATE TABLE `ruantang_patent_info`.`porm_template_parameter`  (
  `id` bigint NOT NULL COMMENT '主键',
  `section_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '模板类型（例如：技术问题、技术效果）',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '提示词模板（含占位符，如${sensor_type}）---------【请基于以下输入：${user_input}  \n使用${spark_approach}方法，生成${spark_knowledge}的技术问题。  \n示例参考：${example}【输出严格按照示例参考】，遵守【规范】${output_rules}-----------',
  `weight` int NULL DEFAULT 1 COMMENT '模板优先级（数值越大优先级越高）',
  `version` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '1.0' COMMENT '模板版本（支持迭代更新）',
  `is_deleted` int NULL DEFAULT NULL COMMENT '删除状态（0：删除，1：未删除）',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人',
  `create_time` bigint NOT NULL COMMENT '创建时间',
  `update_time` bigint NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '提示词模板表' ROW_FORMAT = Dynamic;

技术领域（prom_tech_domain）对象下面有文档模板表（prom_doc_template）对象，对象模板表中关联有（prom_doc_template_type）对象，来确定模板类型，文档模板表对象下有文档分项模板表（prom_doc_section_template），文档分项模板表作为映射表，映射prom_doc_template对象与prom_template对象之间的关系，prom_template对象下有porm_template_parameter表对象（1对多关系）