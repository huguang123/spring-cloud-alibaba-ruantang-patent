好的，我会根据 `TechDomainController` 中的接口定义生成一个详细的接口文档。这个文档将包含每个接口的详细信息，包括请求方法、URL、请求参数、请求体、响应格式等，以便前端开发人员进行前后端分离开发。

### 接口文档

#### 基础信息
- **Base URL**: `http://localhost:9000/prom/api/tech-domains`

---

### 1. 创建技术领域

**请求方法**: `POST`

**URL**: `/api/tech-domains`

**请求体**:
```json
{
  "domainName": "String",
  "parentId": "Long (可选)",
  "description": "String (可选)"
}
```


**请求体参数说明**:
- `domainName` (必填): 技术领域的名称。
- `parentId` (可选): 父级技术领域的ID，一级领域可以不传或传 `null`。
- `description` (可选): 技术领域的描述。

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "技术领域创建成功",
    "data": 1234567890123456789
  }
  ```

- **失败**:
  ```json
  {
    "code": 500,
    "message": "技术领域创建失败",
    "data": null
  }
  ```


---

### 2. 更新技术领域

**请求方法**: `PUT`

**URL**: `/api/tech-domains/{id}`

**路径参数**:
- `id` (必填): 要更新的技术领域的ID。

**请求体**:
```json
{
  "domainName": "String (可选)",
  "parentId": "Long (可选)",
  "description": "String (可选)"
}
```


**请求体参数说明**:
- `domainName` (可选): 技术领域的名称。
- `parentId` (可选): 父级技术领域的ID，一级领域可以不传或传 `null`。
- `description` (可选): 技术领域的描述。

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "技术领域更新成功",
    "data": null
  }
  ```

- **失败**:
  ```json
  {
    "code": 500,
    "message": "技术领域更新失败",
    "data": null
  }
  ```


---

### 3. 删除技术领域

**请求方法**: `DELETE`

**URL**: `/api/tech-domains/{id}`

**路径参数**:
- `id` (必填): 要删除的技术领域的ID。

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "技术领域删除成功",
    "data": null
  }
  ```

- **失败**:
  ```json
  {
    "code": 500,
    "message": "技术领域删除失败",
    "data": null
  }
  ```


---

### 4. 获取技术领域详情

**请求方法**: `GET`

**URL**: `/api/tech-domains/{id}`

**路径参数**:
- `id` (必填): 要获取的技术领域的ID。

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "技术领域获取成功",
    "data": {
      "id": 1234567890123456789,
      "domainName": "String",
      "parentId": 9876543210987654321,
      "parentName": "String",
      "level": 1,
      "description": "String",
      "children": [
        {
          "id": 1111111111111111111,
          "domainName": "String",
          "parentId": 1234567890123456789,
          "parentName": "String",
          "level": 2,
          "description": "String",
          "children": []
        }
      ]
    }
  }
  ```

- **失败**:
  ```json
  {
    "code": 500,
    "message": "技术领域不存在",
    "data": null
  }
  ```


---

### 5. 获取技术领域树

**请求方法**: `GET`

**URL**: `/api/tech-domains/tree`

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "技术领域树获取成功",
    "data": [
      {
        "id": 1234567890123456789,
        "domainName": "String",
        "parentId": null,
        "parentName": null,
        "level": 1,
        "description": "String",
        "children": [
          {
            "id": 1111111111111111111,
            "domainName": "String",
            "parentId": 1234567890123456789,
            "parentName": "String",
            "level": 2,
            "description": "String",
            "children": []
          }
        ]
      }
    ]
  }
  ```


---

### 6. 获取指定父级ID下的子技术领域

**请求方法**: `GET`

**URL**: `/api/tech-domains/children`

**查询参数**:
- `parentId` (可选): 父级技术领域的ID。如果不传，则获取所有一级技术领域。

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "子技术领域获取成功",
    "data": [
      {
        "id": 1111111111111111111,
        "domainName": "String",
        "parentId": 1234567890123456789,
        "parentName": "String",
        "level": 2,
        "description": "String",
        "children": []
      }
    ]
  }
  ```


---

### 示例请求

#### 创建技术领域
**请求**:
```http
POST /api/tech-domains HTTP/1.1
Host: localhost:9000
Content-Type: application/json

{
  "domainName": "人工智能",
  "parentId": null,
  "description": "人工智能领域"
}
```


**响应**:
```json
{
  "code": 200,
  "message": "技术领域创建成功",
  "data": 1234567890123456789
}
```


#### 更新技术领域
**请求**:
```http
PUT /api/tech-domains/1234567890123456789 HTTP/1.1
Host: localhost:9000
Content-Type: application/json

{
  "domainName": "机器学习",
  "parentId": 1234567890123456789,
  "description": "机器学习领域"
}
```


**响应**:
```json
{
  "code": 200,
  "message": "技术领域更新成功",
  "data": null
}
```


#### 删除技术领域
**请求**:
```http
DELETE /api/tech-domains/1234567890123456789 HTTP/1.1
Host: localhost:9000
```


**响应**:
```json
{
  "code": 200,
  "message": "技术领域删除成功",
  "data": null
}
```


#### 获取技术领域详情
**请求**:
```http
GET /api/tech-domains/1234567890123456789 HTTP/1.1
Host: localhost:9000
```


**响应**:
```json
{
  "code": 200,
  "message": "技术领域获取成功",
  "data": {
    "id": 1234567890123456789,
    "domainName": "人工智能",
    "parentId": null,
    "parentName": null,
    "level": 1,
    "description": "人工智能领域",
    "children": [
      {
        "id": 1111111111111111111,
        "domainName": "机器学习",
        "parentId": 1234567890123456789,
        "parentName": "人工智能",
        "level": 2,
        "description": "机器学习领域",
        "children": []
      }
    ]
  }
}
```


#### 获取技术领域树
**请求**:
```http
GET /api/tech-domains/tree HTTP/1.1
Host: localhost:9000
```


**响应**:
```json
{
  "code": 200,
  "message": "技术领域树获取成功",
  "data": [
    {
      "id": 1234567890123456789,
      "domainName": "人工智能",
      "parentId": null,
      "parentName": null,
      "level": 1,
      "description": "人工智能领域",
      "children": [
        {
          "id": 1111111111111111111,
          "domainName": "机器学习",
          "parentId": 1234567890123456789,
          "parentName": "人工智能",
          "level": 2,
          "description": "机器学习领域",
          "children": []
        }
      ]
    }
  ]
}
```


#### 获取指定父级ID下的子技术领域
**请求**:
```http
GET /api/tech-domains/children?parentId=1234567890123456789 HTTP/1.1
Host: localhost:9000
```


**响应**:
```json
{
  "code": 200,
  "message": "子技术领域获取成功",
  "data": [
    {
      "id": 1111111111111111111,
      "domainName": "机器学习",
      "parentId": 1234567890123456789,
      "parentName": "人工智能",
      "level": 2,
      "description": "机器学习领域",
      "children": []
    }
  ]
}
```



#### 基础信息
- **Base URL**: `http://localhost:9000/prom/api/tech-domains`

---

### 根据技术领域名称查询技术领域及其上级技术领域树

**请求方法**: `GET`

**URL**: `/api/tech-domains/search-with-parents`

**查询参数**:
- `domainName` (必填): 技术领域的名称。

**响应**:
- **成功**:
  ```json
  {
    "code": 200,
    "message": "技术领域查询成功",
    "data": [
      {
        "id": 1111111111111111111,
        "domainName": "机器学习",
        "parentId": 1234567890123456789,
        "parentName": "人工智能",
        "level": 2,
        "description": "机器学习领域",
        "children": [],
        "parent": {
          "id": 1234567890123456789,
          "domainName": "人工智能",
          "parentId": null,
          "parentName": null,
          "level": 1,
          "description": "人工智能领域",
          "children": [],
          "parent": null
        }
      }
    ]
  }
  ```


- **失败**:
  ```json
  {
    "code": 500,
    "message": "技术领域不存在",
    "data": []
  }
  ```


---

### 示例请求

**请求**:
```http
GET /api/tech-domains/search-with-parents?domainName=机器学习 HTTP/1.1
Host: localhost:9000
```


**响应**:
```json
{
  "code": 200,
  "message": "技术领域查询成功",
  "data": [
    {
      "id": 1111111111111111111,
      "domainName": "机器学习",
      "parentId": 1234567890123456789,
      "parentName": "人工智能",
      "level": 2,
      "description": "机器学习领域",
      "children": [],
      "parent": {
        "id": 1234567890123456789,
        "domainName": "人工智能",
        "parentId": null,
        "parentName": null,
        "level": 1,
        "description": "人工智能领域",
        "children": [],
        "parent": null
      }
    }
  ]
}
```


---

### 总结
以上代码实现了根据技术领域名称查询技术领域及其上级技术领域树的功能，并提供了详细的接口文档。前端可以根据该接口文档进行开发。如果还有其他需求，请随时告知！
---


