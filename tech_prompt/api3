根据提供的Controller文件内容和相关模型类，以下是针对前端调试的接口文档。文档包括了每个接口的URL、请求方法、请求参数、请求体示例、响应状态码及响应体示例。

### 接口文档

#### 1. 文档模板类型接口

**URL:** `http://localhost:9000/prom/api/doc-template-types`

**1.1 创建文档模板类型**

- **请求方法:** `POST`
- **请求参数:** 无
- **请求体示例:**
  ```json
  {
    "typeName": "模板类型名称",
    "description": "模板类型描述"
  }
  ```

- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板类型创建成功",
    "data": 1
  }
  ```


**1.2 更新文档模板类型**

- **请求方法:** `PUT`
- **请求参数:** 
  - `id` (路径参数): 文档模板类型ID
- **请求体示例:**
  ```json
  {
    "typeName": "更新后的模板类型名称",
    "description": "更新后的模板类型描述"
  }
  ```

- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板类型更新成功",
    "data": null
  }
  ```


**1.3 删除文档模板类型**

- **请求方法:** `DELETE`
- **请求参数:** 
  - `id` (路径参数): 文档模板类型ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板类型删除成功",
    "data": null
  }
  ```


**1.4 获取文档模板类型详情**

- **请求方法:** `GET`
- **请求参数:** 
  - `id` (路径参数): 文档模板类型ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板类型获取成功",
    "data": {
      "id": 1,
      "typeName": "模板类型名称",
      "description": "模板类型描述"
    }
  }
  ```


**1.5 获取所有文档模板类型**

- **请求方法:** `GET`
- **请求参数:** 无
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板类型列表获取成功",
    "data": [
      {
        "id": 1,
        "typeName": "模板类型名称1",
        "description": "模板类型描述1"
      },
      {
        "id": 2,
        "typeName": "模板类型名称2",
        "description": "模板类型描述2"
      }
    ]
  }
  ```


**1.6 根据技术领域ID获取文档模板**

- **请求方法:** `GET`
- **请求参数:** 
  - `domainId` (查询参数): 技术领域ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板列表获取成功",
    "data": [
      {
        "id": 1,
        "templateTypeId": 1,
        "templateTypeName": "模板类型名称1",
        "domainId": 1,
        "domainName": "技术领域名称1",
        "orgId": 1,
        "templateName": "文档模板名称1",
        "sections": [
          {
            "id": 1,
            "docTemplateId": 1,
            "promptId": 1,
            "sectionName": "分项名称1",
            "sortOrder": 1,
            "promptTemplate": {
              "id": 1,
              "promptName": "提示词名称1",
              "promptContent": "提示词内容1"
            }
          }
        ]
      }
    ]
  }
  ```


### 示例请求

**URL:** `http://localhost:9000/prom/api/doc-templates/by-domain?domainId=1`

**请求方法:** `GET`

**响应示例:**
```json
{
  "code": 200,
  "message": "文档模板列表获取成功",
  "data": [
    {
      "id": 1,
      "templateTypeId": 1,
      "templateTypeName": "模板类型名称1",
      "domainId": 1,
      "domainName": "技术领域名称1",
      "orgId": 1,
      "templateName": "文档模板名称1",
      "sections": [
        {
          "id": 1,
          "docTemplateId": 1,
          "promptId": 1,
          "sectionName": "分项名称1",
          "sortOrder": 1,
          "promptTemplate": {
            "id": 1,
            "promptName": "提示词名称1",
            "promptContent": "提示词内容1"
          }
        }
      ]
    }
  ]
}
```






#### 2. 文档模板接口

**URL:** `http://localhost:9000/prom/api/doc-templates`

**2.1 创建文档模板**

- **请求方法:** `POST`
- **请求参数:** 无
- **请求体示例:**
  ```json
  {
    "templateTypeId": 1,
    "domainId": 1,
    "orgId": 1,
    "templateName": "文档模板名称"
  }
  ```

- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板创建成功",
    "data": 1
  }
  ```


**2.2 更新文档模板**

- **请求方法:** `PUT`
- **请求参数:** 
  - `id` (路径参数): 文档模板ID
- **请求体示例:**
  ```json
  {
    "templateTypeId": 1,
    "domainId": 1,
    "orgId": 1,
    "templateName": "更新后的文档模板名称"
  }
  ```

- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板更新成功",
    "data": null
  }
  ```


**2.3 删除文档模板**

- **请求方法:** `DELETE`
- **请求参数:** 
  - `id` (路径参数): 文档模板ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板删除成功",
    "data": null
  }
  ```


**2.4 获取文档模板详情**

- **请求方法:** `GET`
- **请求参数:** 
  - `id` (路径参数): 文档模板ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板获取成功",
    "data": {
      "id": 1,
      "templateTypeId": 1,
      "templateTypeName": "模板类型名称",
      "domainId": 1,
      "domainName": "技术领域名称",
      "orgId": 1,
      "templateName": "文档模板名称",
      "sections": [
        {
          "id": 1,
          "docTemplateId": 1,
          "promptId": 1,
          "sectionName": "分项名称",
          "sortOrder": 1,
          "promptTemplate": {
            "id": 1,
            "promptName": "提示词名称",
            "promptContent": "提示词内容"
          }
        }
      ]
    }
  }
  ```


**2.5 获取所有文档模板**

- **请求方法:** `GET`
- **请求参数:** 无
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板列表获取成功",
    "data": [
      {
        "id": 1,
        "templateTypeId": 1,
        "templateTypeName": "模板类型名称1",
        "domainId": 1,
        "domainName": "技术领域名称1",
        "orgId": 1,
        "templateName": "文档模板名称1",
        "sections": [
          {
            "id": 1,
            "docTemplateId": 1,
            "promptId": 1,
            "sectionName": "分项名称1",
            "sortOrder": 1,
            "promptTemplate": {
              "id": 1,
              "promptName": "提示词名称1",
              "promptContent": "提示词内容1"
            }
          }
        ]
      },
      {
        "id": 2,
        "templateTypeId": 2,
        "templateTypeName": "模板类型名称2",
        "domainId": 2,
        "domainName": "技术领域名称2",
        "orgId": 2,
        "templateName": "文档模板名称2",
        "sections": [
          {
            "id": 2,
            "docTemplateId": 2,
            "promptId": 2,
            "sectionName": "分项名称2",
            "sortOrder": 2,
            "promptTemplate": {
              "id": 2,
              "promptName": "提示词名称2",
              "promptContent": "提示词内容2"
            }
          }
        ]
      }
    ]
  }
  ```


**2.6 根据技术领域ID获取文档模板**

- **请求方法:** `GET`
- **请求参数:** 
  - `domainId` (查询参数): 技术领域ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档模板列表获取成功",
    "data": [
      {
        "id": 1,
        "templateTypeId": 1,
        "templateTypeName": "模板类型名称1",
        "domainId": 1,
        "domainName": "技术领域名称1",
        "orgId": 1,
        "templateName": "文档模板名称1",
        "sections": [
          {
            "id": 1,
            "docTemplateId": 1,
            "promptId": 1,
            "sectionName": "分项名称1",
            "sortOrder": 1,
            "promptTemplate": {
              "id": 1,
              "promptName": "提示词名称1",
              "promptContent": "提示词内容1"
            }
          }
        ]
      }
    ]
  }
  ```


#### 3. 文档分项模板接口

**URL:** `http://localhost:9000/prom/api/doc-section-templates`

**3.1 创建文档分项模板**

- **请求方法:** `POST`
- **请求参数:** 无
- **请求体示例:**
  ```json
  {
    "docTemplateId": 1,
    "promptId": 1,
    "sectionName": "分项名称",
    "sortOrder": 1
  }
  ```

- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档分项模板创建成功",
    "data": 1
  }
  ```


**3.2 更新文档分项模板**

- **请求方法:** `PUT`
- **请求参数:** 
  - `id` (路径参数): 文档分项模板ID
- **请求体示例:**
  ```json
  {
    "docTemplateId": 1,
    "promptId": 1,
    "sectionName": "更新后的分项名称",
    "sortOrder": 1
  }
  ```

- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档分项模板更新成功",
    "data": null
  }
  ```


**3.3 删除文档分项模板**

- **请求方法:** `DELETE`
- **请求参数:** 
  - `id` (路径参数): 文档分项模板ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档分项模板删除成功",
    "data": null
  }
  ```


**3.4 获取文档分项模板详情**

- **请求方法:** `GET`
- **请求参数:** 
  - `id` (路径参数): 文档分项模板ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档分项模板获取成功",
    "data": {
      "id": 1,
      "docTemplateId": 1,
      "promptId": 1,
      "sectionName": "分项名称",
      "sortOrder": 1,
      "promptTemplate": {
        "id": 1,
        "promptName": "提示词名称",
        "promptContent": "提示词内容"
      }
    }
  }
  ```


**3.5 根据文档模板ID获取所有分项模板**

- **请求方法:** `GET`
- **请求参数:** 
  - `docTemplateId` (查询参数): 文档模板ID
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "文档分项模板列表获取成功",
    "data": [
      {
        "id": 1,
        "docTemplateId": 1,
        "promptId": 1,
        "sectionName": "分项名称1",
        "sortOrder": 1,
        "promptTemplate": {
          "id": 1,
          "promptName": "提示词名称1",
          "promptContent": "提示词内容1"
        }
      },
      {
        "id": 2,
        "docTemplateId": 1,
        "promptId": 2,
        "sectionName": "分项名称2",
        "sortOrder": 2,
        "promptTemplate": {
          "id": 2,
          "promptName": "提示词名称2",
          "promptContent": "提示词内容2"
        }
      }
    ]
  }
  ```
根据提供的 `PromTemplateController` 文件内容和 `PromTemplateDTO` 模型类，以下是针对 `getTemplatesByName` 接口的详细接口文档。文档包括了接口的URL、请求方法、请求参数、请求体示例、响应状态码及响应体示例。

### 接口文档

#### 4. 提示词模板接口

**URL:** `http://localhost:9000/prom/api/prom-templates`

**4.6 根据名称模糊查询提示词模板列表**

- **请求方法:** `GET`
- **请求参数:** 
  - `name` (查询参数): 模板名称（模糊查询）
- **请求体示例:** 无
- **响应状态码:** `200`
- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": [
      {
        "id": 1,
        "sectionType": "分项类型1",
        "promName": "提示词模板名称1",
        "content": "提示词模板内容1",
        "weight": 1,
        "version": "1.0",
        "enabled": true,
        "parameters": [
          {
            "id": 1,
            "templateId": 1,
            "paramName": "参数名称1",
            "paramValue": "参数值1"
          }
        ]
      },
      {
        "id": 2,
        "sectionType": "分项类型2",
        "promName": "提示词模板名称2",
        "content": "提示词模板内容2",
        "weight": 2,
        "version": "1.1",
        "enabled": false,
        "parameters": [
          {
            "id": 2,
            "templateId": 2,
            "paramName": "参数名称2",
            "paramValue": "参数值2"
          }
        ]
      }
    ]
  }
  ```


### 详细说明

- **请求方法:** `GET`
  - 使用 `GET` 方法进行模糊查询，通过查询参数 `name` 传递模板名称。

- **请求参数:**
  - `name` (查询参数): 模板名称，用于模糊查询提示词模板。

- **请求体示例:** 无
  - 该接口不需要请求体，所有参数通过查询参数传递。

- **响应状态码:** `200`
  - 表示请求成功，返回查询结果。

- **响应体示例:**
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": [
      {
        "id": 1,
        "sectionType": "分项类型1",
        "promName": "提示词模板名称1",
        "content": "提示词模板内容1",
        "weight": 1,
        "version": "1.0",
        "enabled": true,
        "parameters": [
          {
            "id": 1,
            "templateId": 1,
            "paramName": "参数名称1",
            "paramValue": "参数值1"
          }
        ]
      },
      {
        "id": 2,
        "sectionType": "分项类型2",
        "promName": "提示词模板名称2",
        "content": "提示词模板内容2",
        "weight": 2,
        "version": "1.1",
        "enabled": false,
        "parameters": [
          {
            "id": 2,
            "templateId": 2,
            "paramName": "参数名称2",
            "paramValue": "参数值2"
          }
        ]
      }
    ]
  }
  ```

  - `code`: 状态码，`200` 表示成功。
  - `message`: 消息描述，`查询成功` 表示查询操作成功。
  - `data`: 查询结果列表，包含多个 `PromTemplateDTO` 对象。

### 示例请求

**URL:** `http://localhost:9000/prom/api/prom-templates/by-name?name=模板名称`

**请求方法:** `GET`

**响应示例:**
```json
{
  "code": 200,
  "message": "查询成功",
  "data": [
    {
      "id": 1,
      "sectionType": "分项类型1",
      "promName": "提示词模板名称1",
      "content": "提示词模板内容1",
      "weight": 1,
      "version": "1.0",
      "enabled": true,
      "parameters": [
        {
          "id": 1,
          "templateId": 1,
          "paramName": "参数名称1",
          "paramValue": "参数值1"
        }
      ]
    },
    {
      "id": 2,
      "sectionType": "分项类型2",
      "promName": "提示词模板名称2",
      "content": "提示词模板内容2",
      "weight": 2,
      "version": "1.1",
      "enabled": false,
      "parameters": [
        {
          "id": 2,
          "templateId": 2,
          "paramName": "参数名称2",
          "paramValue": "参数值2"
        }
      ]
    }
  ]
}


### 备注

- `ApiResult` 是一个通用的响应格式，包含 `code`（状态码）、`message`（消息）和 `data`（数据）。
- `DocTemplateDTO` 包含文档模板的详细信息，包括关联的文档模板类型、技术领域、组织表、模板名称以及文档分项模板列表。
- `DocSectionTemplateDTO` 包含文档分项模板的详细信息，包括关联的文档模板ID、提示词模板ID、分项名称、显示顺序以及关联的提示词模板信息。
- `DocTemplateTypeDTO` 包含文档模板类型的详细信息，包括模板类型ID、模板类型名称和描述。
- `DocTemplateRequest` 和 `DocSectionTemplateRequest` 分别用于创建和更新文档模板及文档分项模板的请求体格式。
- `DocTemplateTypeRequest` 用于创建和更新文档模板类型的请求体格式。
